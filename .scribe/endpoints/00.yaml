name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: up
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width, initial-scale=1">

              <title>UserManager</title>

              <!-- Fonts -->
              <link rel="preconnect" href="https://fonts.bunny.net">
              <link href="https://fonts.bunny.net/css?family=figtree:400,600&display=swap" rel="stylesheet" />

              <!-- Styles -->
              <script src="https://cdn.tailwindcss.com"></script>

              <script>
                  tailwind.config = {
                      theme: {
                          extend: {
                              fontFamily: {
                                  sans: ['Figtree', 'ui-sans-serif', 'system-ui', 'sans-serif', "Apple Color Emoji", "Segoe UI Emoji"],
                              }
                          }
                      }
                  }
              </script>
          </head>
          <body class="antialiased">
          <div class="relative flex justify-center items-center min-h-screen bg-gray-100 selection:bg-red-500 selection:text-white">
              <div class="w-full sm:w-3/4 xl:w-1/2 mx-auto p-6">
                  <div class="px-6 py-4 bg-white from-gray-700/50 via-transparent rounded-lg shadow-2xl shadow-gray-500/20 flex items-center focus:outline focus:outline-2 focus:outline-red-500">
                      <div class="relative flex h-3 w-3 group ">
                          <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-green-400 group-[.status-down]:bg-red-600 opacity-75"></span>
                          <span class="relative inline-flex rounded-full h-3 w-3 bg-green-400 group-[.status-down]:bg-red-600"></span>
                      </div>

                      <div class="ml-6">
                          <h2 class="text-xl font-semibold text-gray-900">Application up</h2>

                          <p class="mt-2 text-gray-500 dark:text-gray-400 text-sm leading-relaxed">
                              HTTP request received.

                                                      Response rendered in 142ms.
                                              </p>
                      </div>
                  </div>
              </div>
          </div>
          </body>
          </html>
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming registration request.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      surname:
        name: surname
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: ashly64@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: pBNvYg
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      surname: 'n'
      email: ashly64@example.com
      password: pBNvYg
      description: 'Eius et animi quos velit et.'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming authentication request.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '|]|{+-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: gbailey@example.net
      password: '|]|{+-'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: forgot-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the password reset link request view.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          <!DOCTYPE html>
          <html lang="en" data-theme="winter">
              <head>
                  <meta charset="utf-8">
                  <meta name="viewport" content="width=device-width, initial-scale=1">
                  <title inertia>UserManager</title>

                  <script type="text/javascript">const Ziggy={"url":"http:\/\/localhost","port":null,"defaults":{},"routes":{"register":{"uri":"register","methods":["GET","HEAD"]},"login":{"uri":"login","methods":["GET","HEAD"]},"password.request":{"uri":"forgot-password","methods":["GET","HEAD"]},"password.email":{"uri":"forgot-password","methods":["POST"]},"password.reset":{"uri":"reset-password\/{token}","methods":["GET","HEAD"],"parameters":["token"]},"password.store":{"uri":"reset-password","methods":["POST"]},"verification.notice":{"uri":"verify-email","methods":["GET","HEAD"]},"verification.verify":{"uri":"verify-email\/{id}\/{hash}","methods":["GET","HEAD"],"parameters":["id","hash"]},"verification.send":{"uri":"email\/verification-notification","methods":["POST"]},"password.confirm":{"uri":"confirm-password","methods":["GET","HEAD"]},"password.update":{"uri":"password","methods":["PUT"]},"logout":{"uri":"logout","methods":["POST"]},"user.index":{"uri":"\/","methods":["GET","HEAD"]},"user.update":{"uri":"user\/{id}\/edit","methods":["POST"],"parameters":["id"]},"user.changePassword":{"uri":"user\/{id}\/changePassword","methods":["POST"],"parameters":["id"]},"user.delete":{"uri":"user\/{id}\/delete","methods":["DELETE"],"parameters":["id"]},"admin.dashboard":{"uri":"admin","methods":["GET","HEAD"]},"admin.users":{"uri":"admin\/users","methods":["GET","HEAD"]},"admin.users.edit":{"uri":"admin\/users\/{id}\/edit","methods":["GET","HEAD"],"parameters":["id"]},"admin.users.update":{"uri":"admin\/users\/{id}\/update","methods":["PUT"],"parameters":["id"]},"admin.users.delete":{"uri":"admin\/users\/{id}\/delete","methods":["DELETE"],"parameters":["id"]},"storage.local":{"uri":"storage\/{path}","methods":["GET","HEAD"],"wheres":{"path":".*"},"parameters":["path"]}}};!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(t||self).route=r()}(this,function(){function t(t,r){for(var n=0;n<r.length;n++){var e=r[n];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(t,u(e.key),e)}}function r(r,n,e){return n&&t(r.prototype,n),e&&t(r,e),Object.defineProperty(r,"prototype",{writable:!1}),r}function n(){return n=Object.assign?Object.assign.bind():function(t){for(var r=1;r<arguments.length;r++){var n=arguments[r];for(var e in n)({}).hasOwnProperty.call(n,e)&&(t[e]=n[e])}return t},n.apply(null,arguments)}function e(t){return e=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},e(t)}function o(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(t){}return(o=function(){return!!t})()}function i(t,r){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,r){return t.__proto__=r,t},i(t,r)}function u(t){var r=function(t){if("object"!=typeof t||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==typeof r?r:r+""}function f(t){var r="function"==typeof Map?new Map:void 0;return f=function(t){if(null===t||!function(t){try{return-1!==Function.toString.call(t).indexOf("[native code]")}catch(r){return"function"==typeof t}}(t))return t;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==r){if(r.has(t))return r.get(t);r.set(t,n)}function n(){return function(t,r,n){if(o())return Reflect.construct.apply(null,arguments);var e=[null];e.push.apply(e,r);var u=new(t.bind.apply(t,e));return n&&i(u,n.prototype),u}(t,arguments,e(this).constructor)}return n.prototype=Object.create(t.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),i(n,t)},f(t)}var a=String.prototype.replace,c=/%20/g,l="RFC3986",s={default:l,formatters:{RFC1738:function(t){return a.call(t,c,"+")},RFC3986:function(t){return String(t)}},RFC1738:"RFC1738",RFC3986:l},v=Object.prototype.hasOwnProperty,p=Array.isArray,y=function(){for(var t=[],r=0;r<256;++r)t.push("%"+((r<16?"0":"")+r.toString(16)).toUpperCase());return t}(),d=function(t,r){for(var n=r&&r.plainObjects?Object.create(null):{},e=0;e<t.length;++e)void 0!==t[e]&&(n[e]=t[e]);return n},b={arrayToObject:d,assign:function(t,r){return Object.keys(r).reduce(function(t,n){return t[n]=r[n],t},t)},combine:function(t,r){return[].concat(t,r)},compact:function(t){for(var r=[{obj:{o:t},prop:"o"}],n=[],e=0;e<r.length;++e)for(var o=r[e],i=o.obj[o.prop],u=Object.keys(i),f=0;f<u.length;++f){var a=u[f],c=i[a];"object"==typeof c&&null!==c&&-1===n.indexOf(c)&&(r.push({obj:i,prop:a}),n.push(c))}return function(t){for(;t.length>1;){var r=t.pop(),n=r.obj[r.prop];if(p(n)){for(var e=[],o=0;o<n.length;++o)void 0!==n[o]&&e.push(n[o]);r.obj[r.prop]=e}}}(r),t},decode:function(t,r,n){var e=t.replace(/\+/g," ");if("iso-8859-1"===n)return e.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(e)}catch(t){return e}},encode:function(t,r,n,e,o){if(0===t.length)return t;var i=t;if("symbol"==typeof t?i=Symbol.prototype.toString.call(t):"string"!=typeof t&&(i=String(t)),"iso-8859-1"===n)return escape(i).replace(/%u[0-9a-f]{4}/gi,function(t){return"%26%23"+parseInt(t.slice(2),16)+"%3B"});for(var u="",f=0;f<i.length;++f){var a=i.charCodeAt(f);45===a||46===a||95===a||126===a||a>=48&&a<=57||a>=65&&a<=90||a>=97&&a<=122||o===s.RFC1738&&(40===a||41===a)?u+=i.charAt(f):a<128?u+=y[a]:a<2048?u+=y[192|a>>6]+y[128|63&a]:a<55296||a>=57344?u+=y[224|a>>12]+y[128|a>>6&63]+y[128|63&a]:(a=65536+((1023&a)<<10|1023&i.charCodeAt(f+=1)),u+=y[240|a>>18]+y[128|a>>12&63]+y[128|a>>6&63]+y[128|63&a])}return u},isBuffer:function(t){return!(!t||"object"!=typeof t||!(t.constructor&&t.constructor.isBuffer&&t.constructor.isBuffer(t)))},isRegExp:function(t){return"[object RegExp]"===Object.prototype.toString.call(t)},maybeMap:function(t,r){if(p(t)){for(var n=[],e=0;e<t.length;e+=1)n.push(r(t[e]));return n}return r(t)},merge:function t(r,n,e){if(!n)return r;if("object"!=typeof n){if(p(r))r.push(n);else{if(!r||"object"!=typeof r)return[r,n];(e&&(e.plainObjects||e.allowPrototypes)||!v.call(Object.prototype,n))&&(r[n]=!0)}return r}if(!r||"object"!=typeof r)return[r].concat(n);var o=r;return p(r)&&!p(n)&&(o=d(r,e)),p(r)&&p(n)?(n.forEach(function(n,o){if(v.call(r,o)){var i=r[o];i&&"object"==typeof i&&n&&"object"==typeof n?r[o]=t(i,n,e):r.push(n)}else r[o]=n}),r):Object.keys(n).reduce(function(r,o){var i=n[o];return r[o]=v.call(r,o)?t(r[o],i,e):i,r},o)}},h=Object.prototype.hasOwnProperty,g={brackets:function(t){return t+"[]"},comma:"comma",indices:function(t,r){return t+"["+r+"]"},repeat:function(t){return t}},m=Array.isArray,j=String.prototype.split,w=Array.prototype.push,O=function(t,r){w.apply(t,m(r)?r:[r])},E=Date.prototype.toISOString,R=s.default,S={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:b.encode,encodeValuesOnly:!1,format:R,formatter:s.formatters[R],indices:!1,serializeDate:function(t){return E.call(t)},skipNulls:!1,strictNullHandling:!1},k=function t(r,n,e,o,i,u,f,a,c,l,s,v,p,y){var d,h=r;if("function"==typeof f?h=f(n,h):h instanceof Date?h=l(h):"comma"===e&&m(h)&&(h=b.maybeMap(h,function(t){return t instanceof Date?l(t):t})),null===h){if(o)return u&&!p?u(n,S.encoder,y,"key",s):n;h=""}if("string"==typeof(d=h)||"number"==typeof d||"boolean"==typeof d||"symbol"==typeof d||"bigint"==typeof d||b.isBuffer(h)){if(u){var g=p?n:u(n,S.encoder,y,"key",s);if("comma"===e&&p){for(var w=j.call(String(h),","),E="",R=0;R<w.length;++R)E+=(0===R?"":",")+v(u(w[R],S.encoder,y,"value",s));return[v(g)+"="+E]}return[v(g)+"="+v(u(h,S.encoder,y,"value",s))]}return[v(n)+"="+v(String(h))]}var k,T=[];if(void 0===h)return T;if("comma"===e&&m(h))k=[{value:h.length>0?h.join(",")||null:void 0}];else if(m(f))k=f;else{var $=Object.keys(h);k=a?$.sort(a):$}for(var x=0;x<k.length;++x){var N=k[x],C="object"==typeof N&&void 0!==N.value?N.value:h[N];if(!i||null!==C){var A=m(h)?"function"==typeof e?e(n,N):n:n+(c?"."+N:"["+N+"]");O(T,t(C,A,e,o,i,u,f,a,c,l,s,v,p,y))}}return T},T=Object.prototype.hasOwnProperty,$=Array.isArray,x={allowDots:!1,allowPrototypes:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:b.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},N=function(t){return t.replace(/&#(\d+);/g,function(t,r){return String.fromCharCode(parseInt(r,10))})},C=function(t,r){return t&&"string"==typeof t&&r.comma&&t.indexOf(",")>-1?t.split(","):t},A=function(t,r,n,e){if(t){var o=n.allowDots?t.replace(/\.([^.[]+)/g,"[$1]"):t,i=/(\[[^[\]]*])/g,u=n.depth>0&&/(\[[^[\]]*])/.exec(o),f=u?o.slice(0,u.index):o,a=[];if(f){if(!n.plainObjects&&T.call(Object.prototype,f)&&!n.allowPrototypes)return;a.push(f)}for(var c=0;n.depth>0&&null!==(u=i.exec(o))&&c<n.depth;){if(c+=1,!n.plainObjects&&T.call(Object.prototype,u[1].slice(1,-1))&&!n.allowPrototypes)return;a.push(u[1])}return u&&a.push("["+o.slice(u.index)+"]"),function(t,r,n,e){for(var o=e?r:C(r,n),i=t.length-1;i>=0;--i){var u,f=t[i];if("[]"===f&&n.parseArrays)u=[].concat(o);else{u=n.plainObjects?Object.create(null):{};var a="["===f.charAt(0)&&"]"===f.charAt(f.length-1)?f.slice(1,-1):f,c=parseInt(a,10);n.parseArrays||""!==a?!isNaN(c)&&f!==a&&String(c)===a&&c>=0&&n.parseArrays&&c<=n.arrayLimit?(u=[])[c]=o:"__proto__"!==a&&(u[a]=o):u={0:o}}o=u}return o}(a,r,n,e)}},D=function(t,r){var n=function(t){if(!t)return x;if(null!=t.decoder&&"function"!=typeof t.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==t.charset&&"utf-8"!==t.charset&&"iso-8859-1"!==t.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");return{allowDots:void 0===t.allowDots?x.allowDots:!!t.allowDots,allowPrototypes:"boolean"==typeof t.allowPrototypes?t.allowPrototypes:x.allowPrototypes,arrayLimit:"number"==typeof t.arrayLimit?t.arrayLimit:x.arrayLimit,charset:void 0===t.charset?x.charset:t.charset,charsetSentinel:"boolean"==typeof t.charsetSentinel?t.charsetSentinel:x.charsetSentinel,comma:"boolean"==typeof t.comma?t.comma:x.comma,decoder:"function"==typeof t.decoder?t.decoder:x.decoder,delimiter:"string"==typeof t.delimiter||b.isRegExp(t.delimiter)?t.delimiter:x.delimiter,depth:"number"==typeof t.depth||!1===t.depth?+t.depth:x.depth,ignoreQueryPrefix:!0===t.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof t.interpretNumericEntities?t.interpretNumericEntities:x.interpretNumericEntities,parameterLimit:"number"==typeof t.parameterLimit?t.parameterLimit:x.parameterLimit,parseArrays:!1!==t.parseArrays,plainObjects:"boolean"==typeof t.plainObjects?t.plainObjects:x.plainObjects,strictNullHandling:"boolean"==typeof t.strictNullHandling?t.strictNullHandling:x.strictNullHandling}}(r);if(""===t||null==t)return n.plainObjects?Object.create(null):{};for(var e="string"==typeof t?function(t,r){var n,e={},o=(r.ignoreQueryPrefix?t.replace(/^\?/,""):t).split(r.delimiter,Infinity===r.parameterLimit?void 0:r.parameterLimit),i=-1,u=r.charset;if(r.charsetSentinel)for(n=0;n<o.length;++n)0===o[n].indexOf("utf8=")&&("utf8=%E2%9C%93"===o[n]?u="utf-8":"utf8=%26%2310003%3B"===o[n]&&(u="iso-8859-1"),i=n,n=o.length);for(n=0;n<o.length;++n)if(n!==i){var f,a,c=o[n],l=c.indexOf("]="),s=-1===l?c.indexOf("="):l+1;-1===s?(f=r.decoder(c,x.decoder,u,"key"),a=r.strictNullHandling?null:""):(f=r.decoder(c.slice(0,s),x.decoder,u,"key"),a=b.maybeMap(C(c.slice(s+1),r),function(t){return r.decoder(t,x.decoder,u,"value")})),a&&r.interpretNumericEntities&&"iso-8859-1"===u&&(a=N(a)),c.indexOf("[]=")>-1&&(a=$(a)?[a]:a),e[f]=T.call(e,f)?b.combine(e[f],a):a}return e}(t,n):t,o=n.plainObjects?Object.create(null):{},i=Object.keys(e),u=0;u<i.length;++u){var f=i[u],a=A(f,e[f],n,"string"==typeof t);o=b.merge(o,a,n)}return b.compact(o)},P=/*#__PURE__*/function(){function t(t,r,n){var e,o;this.name=t,this.definition=r,this.bindings=null!=(e=r.bindings)?e:{},this.wheres=null!=(o=r.wheres)?o:{},this.config=n}var n=t.prototype;return n.matchesUrl=function(t){var r,n=this;if(!this.definition.methods.includes("GET"))return!1;var e=this.template.replace(/[.*+$()[\]]/g,"\\$&").replace(/(\/?){([^}?]*)(\??)}/g,function(t,r,e,o){var i,u="(?<"+e+">"+((null==(i=n.wheres[e])?void 0:i.replace(/(^\^)|(\$$)/g,""))||"[^/?]+")+")";return o?"("+r+u+")?":""+r+u}).replace(/^\w+:\/\//,""),o=t.replace(/^\w+:\/\//,"").split("?"),i=o[0],u=o[1],f=null!=(r=new RegExp("^"+e+"/?$").exec(i))?r:new RegExp("^"+e+"/?$").exec(decodeURI(i));if(f){for(var a in f.groups)f.groups[a]="string"==typeof f.groups[a]?decodeURIComponent(f.groups[a]):f.groups[a];return{params:f.groups,query:D(u)}}return!1},n.compile=function(t){var r=this;return this.parameterSegments.length?this.template.replace(/{([^}?]+)(\??)}/g,function(n,e,o){var i,u;if(!o&&[null,void 0].includes(t[e]))throw new Error("Ziggy error: '"+e+"' parameter is required for route '"+r.name+"'.");if(r.wheres[e]&&!new RegExp("^"+(o?"("+r.wheres[e]+")?":r.wheres[e])+"$").test(null!=(u=t[e])?u:""))throw new Error("Ziggy error: '"+e+"' parameter '"+t[e]+"' does not match required format '"+r.wheres[e]+"' for route '"+r.name+"'.");return encodeURI(null!=(i=t[e])?i:"").replace(/%7C/g,"|").replace(/%25/g,"%").replace(/\$/g,"%24")}).replace(this.config.absolute?/(\.[^/]+?)(\/\/)/:/(^)(\/\/)/,"$1/").replace(/\/+$/,""):this.template},r(t,[{key:"template",get:function(){var t=(this.origin+"/"+this.definition.uri).replace(/\/+$/,"");return""===t?"/":t}},{key:"origin",get:function(){return this.config.absolute?this.definition.domain?""+this.config.url.match(/^\w+:\/\//)[0]+this.definition.domain+(this.config.port?":"+this.config.port:""):this.config.url:""}},{key:"parameterSegments",get:function(){var t,r;return null!=(t=null==(r=this.template.match(/{[^}?]+\??}/g))?void 0:r.map(function(t){return{name:t.replace(/{|\??}/g,""),required:!/\?}$/.test(t)}}))?t:[]}}])}(),F=/*#__PURE__*/function(t){function e(r,e,o,i){var u;if(void 0===o&&(o=!0),(u=t.call(this)||this).t=null!=i?i:"undefined"!=typeof Ziggy?Ziggy:null==globalThis?void 0:globalThis.Ziggy,u.t=n({},u.t,{absolute:o}),r){if(!u.t.routes[r])throw new Error("Ziggy error: route '"+r+"' is not in the route list.");u.i=new P(r,u.t.routes[r],u.t),u.u=u.l(e)}return u}var o,u;u=t,(o=e).prototype=Object.create(u.prototype),o.prototype.constructor=o,i(o,u);var f=e.prototype;return f.toString=function(){var t=this,r=Object.keys(this.u).filter(function(r){return!t.i.parameterSegments.some(function(t){return t.name===r})}).filter(function(t){return"_query"!==t}).reduce(function(r,e){var o;return n({},r,((o={})[e]=t.u[e],o))},{});return this.i.compile(this.u)+function(t,r){var n,e=t,o=function(t){if(!t)return S;if(null!=t.encoder&&"function"!=typeof t.encoder)throw new TypeError("Encoder has to be a function.");var r=t.charset||S.charset;if(void 0!==t.charset&&"utf-8"!==t.charset&&"iso-8859-1"!==t.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var n=s.default;if(void 0!==t.format){if(!h.call(s.formatters,t.format))throw new TypeError("Unknown format option provided.");n=t.format}var e=s.formatters[n],o=S.filter;return("function"==typeof t.filter||m(t.filter))&&(o=t.filter),{addQueryPrefix:"boolean"==typeof t.addQueryPrefix?t.addQueryPrefix:S.addQueryPrefix,allowDots:void 0===t.allowDots?S.allowDots:!!t.allowDots,charset:r,charsetSentinel:"boolean"==typeof t.charsetSentinel?t.charsetSentinel:S.charsetSentinel,delimiter:void 0===t.delimiter?S.delimiter:t.delimiter,encode:"boolean"==typeof t.encode?t.encode:S.encode,encoder:"function"==typeof t.encoder?t.encoder:S.encoder,encodeValuesOnly:"boolean"==typeof t.encodeValuesOnly?t.encodeValuesOnly:S.encodeValuesOnly,filter:o,format:n,formatter:e,serializeDate:"function"==typeof t.serializeDate?t.serializeDate:S.serializeDate,skipNulls:"boolean"==typeof t.skipNulls?t.skipNulls:S.skipNulls,sort:"function"==typeof t.sort?t.sort:null,strictNullHandling:"boolean"==typeof t.strictNullHandling?t.strictNullHandling:S.strictNullHandling}}(r);"function"==typeof o.filter?e=(0,o.filter)("",e):m(o.filter)&&(n=o.filter);var i=[];if("object"!=typeof e||null===e)return"";var u=g[r&&r.arrayFormat in g?r.arrayFormat:r&&"indices"in r?r.indices?"indices":"repeat":"indices"];n||(n=Object.keys(e)),o.sort&&n.sort(o.sort);for(var f=0;f<n.length;++f){var a=n[f];o.skipNulls&&null===e[a]||O(i,k(e[a],a,u,o.strictNullHandling,o.skipNulls,o.encode?o.encoder:null,o.filter,o.sort,o.allowDots,o.serializeDate,o.format,o.formatter,o.encodeValuesOnly,o.charset))}var c=i.join(o.delimiter),l=!0===o.addQueryPrefix?"?":"";return o.charsetSentinel&&(l+="iso-8859-1"===o.charset?"utf8=%26%2310003%3B&":"utf8=%E2%9C%93&"),c.length>0?l+c:""}(n({},r,this.u._query),{addQueryPrefix:!0,arrayFormat:"indices",encodeValuesOnly:!0,skipNulls:!0,encoder:function(t,r){return"boolean"==typeof t?Number(t):r(t)}})},f.v=function(t){var r=this;t?this.t.absolute&&t.startsWith("/")&&(t=this.p().host+t):t=this.h();var e={},o=Object.entries(this.t.routes).find(function(n){return e=new P(n[0],n[1],r.t).matchesUrl(t)})||[void 0,void 0];return n({name:o[0]},e,{route:o[1]})},f.h=function(){var t=this.p(),r=t.pathname,n=t.search;return(this.t.absolute?t.host+r:r.replace(this.t.url.replace(/^\w*:\/\/[^/]+/,""),"").replace(/^\/+/,"/"))+n},f.current=function(t,r){var e=this.v(),o=e.name,i=e.params,u=e.query,f=e.route;if(!t)return o;var a=new RegExp("^"+t.replace(/\./g,"\\.").replace(/\*/g,".*")+"$").test(o);if([null,void 0].includes(r)||!a)return a;var c=new P(o,f,this.t);r=this.l(r,c);var l=n({},i,u);if(Object.values(r).every(function(t){return!t})&&!Object.values(l).some(function(t){return void 0!==t}))return!0;var s=function(t,r){return Object.entries(t).every(function(t){var n=t[0],e=t[1];return Array.isArray(e)&&Array.isArray(r[n])?e.every(function(t){return r[n].includes(t)}):"object"==typeof e&&"object"==typeof r[n]&&null!==e&&null!==r[n]?s(e,r[n]):r[n]==e})};return s(r,l)},f.p=function(){var t,r,n,e,o,i,u="undefined"!=typeof window?window.location:{},f=u.host,a=u.pathname,c=u.search;return{host:null!=(t=null==(r=this.t.location)?void 0:r.host)?t:void 0===f?"":f,pathname:null!=(n=null==(e=this.t.location)?void 0:e.pathname)?n:void 0===a?"":a,search:null!=(o=null==(i=this.t.location)?void 0:i.search)?o:void 0===c?"":c}},f.has=function(t){return this.t.routes.hasOwnProperty(t)},f.l=function(t,r){var e=this;void 0===t&&(t={}),void 0===r&&(r=this.i),null!=t||(t={}),t=["string","number"].includes(typeof t)?[t]:t;var o=r.parameterSegments.filter(function(t){return!e.t.defaults[t.name]});if(Array.isArray(t))t=t.reduce(function(t,r,e){var i,u;return n({},t,o[e]?((i={})[o[e].name]=r,i):"object"==typeof r?r:((u={})[r]="",u))},{});else if(1===o.length&&!t[o[0].name]&&(t.hasOwnProperty(Object.values(r.bindings)[0])||t.hasOwnProperty("id"))){var i;(i={})[o[0].name]=t,t=i}return n({},this.m(r),this.j(t,r))},f.m=function(t){var r=this;return t.parameterSegments.filter(function(t){return r.t.defaults[t.name]}).reduce(function(t,e,o){var i,u=e.name;return n({},t,((i={})[u]=r.t.defaults[u],i))},{})},f.j=function(t,r){var e=r.bindings,o=r.parameterSegments;return Object.entries(t).reduce(function(t,r){var i,u,f=r[0],a=r[1];if(!a||"object"!=typeof a||Array.isArray(a)||!o.some(function(t){return t.name===f}))return n({},t,((u={})[f]=a,u));if(!a.hasOwnProperty(e[f])){if(!a.hasOwnProperty("id"))throw new Error("Ziggy error: object passed as '"+f+"' parameter is missing route model binding key '"+e[f]+"'.");e[f]="id"}return n({},t,((i={})[f]=a[e[f]],i))},{})},f.valueOf=function(){return this.toString()},r(e,[{key:"params",get:function(){var t=this.v();return n({},t.params,t.query)}},{key:"routeParams",get:function(){return this.v().params}},{key:"queryParams",get:function(){return this.v().query}}])}(/*#__PURE__*/f(String));return function(t,r,n,e){var o=new F(t,r,n,e);return t?o.toString():o}});
          </script>        <link rel="preload" as="style" href="http://localhost/build/assets/app-CshSF23B.css" /><link rel="modulepreload" href="http://localhost/build/assets/app-CI6-uSIW.js" /><link rel="stylesheet" href="http://localhost/build/assets/app-CshSF23B.css" /><script type="module" src="http://localhost/build/assets/app-CI6-uSIW.js"></script>            </head>
              <body class="font-sans antialiased bg-base-100">
                  <div id="app" data-page="{&quot;component&quot;:&quot;Auth\/ForgotPassword&quot;,&quot;props&quot;:{&quot;errors&quot;:{},&quot;name&quot;:&quot;UserManager&quot;,&quot;quote&quot;:{&quot;message&quot;:&quot;Let all your things have their places; let each part of your business have its time.&quot;,&quot;author&quot;:&quot;Benjamin Franklin&quot;},&quot;auth&quot;:{&quot;user&quot;:null},&quot;ziggy&quot;:{&quot;url&quot;:&quot;http:\/\/localhost&quot;,&quot;port&quot;:null,&quot;defaults&quot;:[],&quot;routes&quot;:{&quot;register&quot;:{&quot;uri&quot;:&quot;register&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;login&quot;:{&quot;uri&quot;:&quot;login&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;password.request&quot;:{&quot;uri&quot;:&quot;forgot-password&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;password.email&quot;:{&quot;uri&quot;:&quot;forgot-password&quot;,&quot;methods&quot;:[&quot;POST&quot;]},&quot;password.reset&quot;:{&quot;uri&quot;:&quot;reset-password\/{token}&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;],&quot;parameters&quot;:[&quot;token&quot;]},&quot;password.store&quot;:{&quot;uri&quot;:&quot;reset-password&quot;,&quot;methods&quot;:[&quot;POST&quot;]},&quot;verification.notice&quot;:{&quot;uri&quot;:&quot;verify-email&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;verification.verify&quot;:{&quot;uri&quot;:&quot;verify-email\/{id}\/{hash}&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;],&quot;parameters&quot;:[&quot;id&quot;,&quot;hash&quot;]},&quot;verification.send&quot;:{&quot;uri&quot;:&quot;email\/verification-notification&quot;,&quot;methods&quot;:[&quot;POST&quot;]},&quot;password.confirm&quot;:{&quot;uri&quot;:&quot;confirm-password&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;password.update&quot;:{&quot;uri&quot;:&quot;password&quot;,&quot;methods&quot;:[&quot;PUT&quot;]},&quot;logout&quot;:{&quot;uri&quot;:&quot;logout&quot;,&quot;methods&quot;:[&quot;POST&quot;]},&quot;user.index&quot;:{&quot;uri&quot;:&quot;\/&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;user.update&quot;:{&quot;uri&quot;:&quot;user\/{id}\/edit&quot;,&quot;methods&quot;:[&quot;POST&quot;],&quot;parameters&quot;:[&quot;id&quot;]},&quot;user.changePassword&quot;:{&quot;uri&quot;:&quot;user\/{id}\/changePassword&quot;,&quot;methods&quot;:[&quot;POST&quot;],&quot;parameters&quot;:[&quot;id&quot;]},&quot;user.delete&quot;:{&quot;uri&quot;:&quot;user\/{id}\/delete&quot;,&quot;methods&quot;:[&quot;DELETE&quot;],&quot;parameters&quot;:[&quot;id&quot;]},&quot;admin.dashboard&quot;:{&quot;uri&quot;:&quot;admin&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;admin.users&quot;:{&quot;uri&quot;:&quot;admin\/users&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;admin.users.edit&quot;:{&quot;uri&quot;:&quot;admin\/users\/{id}\/edit&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;],&quot;parameters&quot;:[&quot;id&quot;]},&quot;admin.users.update&quot;:{&quot;uri&quot;:&quot;admin\/users\/{id}\/update&quot;,&quot;methods&quot;:[&quot;PUT&quot;],&quot;parameters&quot;:[&quot;id&quot;]},&quot;admin.users.delete&quot;:{&quot;uri&quot;:&quot;admin\/users\/{id}\/delete&quot;,&quot;methods&quot;:[&quot;DELETE&quot;],&quot;parameters&quot;:[&quot;id&quot;]},&quot;storage.local&quot;:{&quot;uri&quot;:&quot;storage\/{path}&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;],&quot;wheres&quot;:{&quot;path&quot;:&quot;.*&quot;},&quot;parameters&quot;:[&quot;path&quot;]}},&quot;location&quot;:&quot;http:\/\/localhost\/forgot-password&quot;},&quot;flash&quot;:{&quot;type&quot;:null,&quot;message&quot;:null},&quot;status&quot;:null},&quot;url&quot;:&quot;\/forgot-password&quot;,&quot;version&quot;:&quot;5e7448cf8010c92df97ff203a50152f0&quot;,&quot;clearHistory&quot;:false,&quot;encryptHistory&quot;:false}"></div>    </body>
          </html>
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          link: '<http://localhost/build/assets/app-CshSF23B.css>; rel="preload"; as="style", <http://localhost/build/assets/app-CI6-uSIW.js>; rel="modulepreload"'
          vary: X-Inertia
          set-cookie: 'XSRF-TOKEN=eyJpdiI6ImxTYVNQU0FsdUJDb3FDd0xUMktHTkE9PSIsInZhbHVlIjoiaGNsRzNTb04veFY4SGlCbkVhcGZkL2lyOXJBdHpSRTl2VGhZUStHaUZKUFRHK2JyY1Q1eWgvQkhCV2w1RnFHdGRkWlExQlZKV1F5Z0FSbW5JMmpRcEdDd3VudGFBWHV3dTZ2UFcxa2VkT0sxeFV2VnRaQXllUm15dWxoNDN0ZkQiLCJtYWMiOiIyYzllYjY2Mjk2ODM5NDEzMDZiMDM4N2FiZmJmZjRhZjNmZTY5OTg4NzMwYTY3NzlmZDMyMWMwZmI5MDZkYmU5IiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; samesite=lax; usermanager_session=eyJpdiI6InNHRnFnOE5RTDRCMWpxcGRrTzg2M1E9PSIsInZhbHVlIjoic1JiUGM1bEhsTG1mc0swdVUxM0N0TWFBYzU5NldDaTNIM0czUEZYa2lPYnRQZGMwMjF6b3VNa1VYT2RCZDZNNk1YUFloZnNEcTZJUE9VMlQwL1RGNXlvMzFLMFVrTjBGYjRXTm40SGQ3NTR4Q3l2SmlSTk5BdHRDSGx1RHJUM2UiLCJtYWMiOiIxZmZhZDYzNDcyMWMwNWMxYTE5MTRiOWIwYmZhOTA5ZDk2YTllMjllYzY0OGY0MzdlYjdjZDlhN2MzNTE2NzY5IiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: forgot-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming password reset link request.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: gbailey@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'reset-password/{token}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the password reset view.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      token: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          <!DOCTYPE html>
          <html lang="en" data-theme="winter">
              <head>
                  <meta charset="utf-8">
                  <meta name="viewport" content="width=device-width, initial-scale=1">
                  <title inertia>UserManager</title>

                  <script type="text/javascript">Object.assign(Ziggy.routes,{"register":{"uri":"register","methods":["GET","HEAD"]},"login":{"uri":"login","methods":["GET","HEAD"]},"password.request":{"uri":"forgot-password","methods":["GET","HEAD"]},"password.email":{"uri":"forgot-password","methods":["POST"]},"password.reset":{"uri":"reset-password\/{token}","methods":["GET","HEAD"],"parameters":["token"]},"password.store":{"uri":"reset-password","methods":["POST"]},"verification.notice":{"uri":"verify-email","methods":["GET","HEAD"]},"verification.verify":{"uri":"verify-email\/{id}\/{hash}","methods":["GET","HEAD"],"parameters":["id","hash"]},"verification.send":{"uri":"email\/verification-notification","methods":["POST"]},"password.confirm":{"uri":"confirm-password","methods":["GET","HEAD"]},"password.update":{"uri":"password","methods":["PUT"]},"logout":{"uri":"logout","methods":["POST"]},"user.index":{"uri":"\/","methods":["GET","HEAD"]},"user.update":{"uri":"user\/{id}\/edit","methods":["POST"],"parameters":["id"]},"user.changePassword":{"uri":"user\/{id}\/changePassword","methods":["POST"],"parameters":["id"]},"user.delete":{"uri":"user\/{id}\/delete","methods":["DELETE"],"parameters":["id"]},"admin.dashboard":{"uri":"admin","methods":["GET","HEAD"]},"admin.users":{"uri":"admin\/users","methods":["GET","HEAD"]},"admin.users.edit":{"uri":"admin\/users\/{id}\/edit","methods":["GET","HEAD"],"parameters":["id"]},"admin.users.update":{"uri":"admin\/users\/{id}\/update","methods":["PUT"],"parameters":["id"]},"admin.users.delete":{"uri":"admin\/users\/{id}\/delete","methods":["DELETE"],"parameters":["id"]},"storage.local":{"uri":"storage\/{path}","methods":["GET","HEAD"],"wheres":{"path":".*"},"parameters":["path"]}});</script>        <link rel="preload" as="style" href="http://localhost/build/assets/app-CshSF23B.css" /><link rel="modulepreload" href="http://localhost/build/assets/app-CI6-uSIW.js" /><link rel="stylesheet" href="http://localhost/build/assets/app-CshSF23B.css" /><script type="module" src="http://localhost/build/assets/app-CI6-uSIW.js"></script>            </head>
              <body class="font-sans antialiased bg-base-100">
                  <div id="app" data-page="{&quot;component&quot;:&quot;Auth\/ResetPassword&quot;,&quot;props&quot;:{&quot;errors&quot;:{},&quot;name&quot;:&quot;UserManager&quot;,&quot;quote&quot;:{&quot;message&quot;:&quot;It is never too late to be what you might have been.&quot;,&quot;author&quot;:&quot;George Eliot&quot;},&quot;auth&quot;:{&quot;user&quot;:null},&quot;ziggy&quot;:{&quot;url&quot;:&quot;http:\/\/localhost&quot;,&quot;port&quot;:null,&quot;defaults&quot;:[],&quot;routes&quot;:{&quot;register&quot;:{&quot;uri&quot;:&quot;register&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;login&quot;:{&quot;uri&quot;:&quot;login&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;password.request&quot;:{&quot;uri&quot;:&quot;forgot-password&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;password.email&quot;:{&quot;uri&quot;:&quot;forgot-password&quot;,&quot;methods&quot;:[&quot;POST&quot;]},&quot;password.reset&quot;:{&quot;uri&quot;:&quot;reset-password\/{token}&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;],&quot;parameters&quot;:[&quot;token&quot;]},&quot;password.store&quot;:{&quot;uri&quot;:&quot;reset-password&quot;,&quot;methods&quot;:[&quot;POST&quot;]},&quot;verification.notice&quot;:{&quot;uri&quot;:&quot;verify-email&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;verification.verify&quot;:{&quot;uri&quot;:&quot;verify-email\/{id}\/{hash}&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;],&quot;parameters&quot;:[&quot;id&quot;,&quot;hash&quot;]},&quot;verification.send&quot;:{&quot;uri&quot;:&quot;email\/verification-notification&quot;,&quot;methods&quot;:[&quot;POST&quot;]},&quot;password.confirm&quot;:{&quot;uri&quot;:&quot;confirm-password&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;password.update&quot;:{&quot;uri&quot;:&quot;password&quot;,&quot;methods&quot;:[&quot;PUT&quot;]},&quot;logout&quot;:{&quot;uri&quot;:&quot;logout&quot;,&quot;methods&quot;:[&quot;POST&quot;]},&quot;user.index&quot;:{&quot;uri&quot;:&quot;\/&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;user.update&quot;:{&quot;uri&quot;:&quot;user\/{id}\/edit&quot;,&quot;methods&quot;:[&quot;POST&quot;],&quot;parameters&quot;:[&quot;id&quot;]},&quot;user.changePassword&quot;:{&quot;uri&quot;:&quot;user\/{id}\/changePassword&quot;,&quot;methods&quot;:[&quot;POST&quot;],&quot;parameters&quot;:[&quot;id&quot;]},&quot;user.delete&quot;:{&quot;uri&quot;:&quot;user\/{id}\/delete&quot;,&quot;methods&quot;:[&quot;DELETE&quot;],&quot;parameters&quot;:[&quot;id&quot;]},&quot;admin.dashboard&quot;:{&quot;uri&quot;:&quot;admin&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;admin.users&quot;:{&quot;uri&quot;:&quot;admin\/users&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;]},&quot;admin.users.edit&quot;:{&quot;uri&quot;:&quot;admin\/users\/{id}\/edit&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;],&quot;parameters&quot;:[&quot;id&quot;]},&quot;admin.users.update&quot;:{&quot;uri&quot;:&quot;admin\/users\/{id}\/update&quot;,&quot;methods&quot;:[&quot;PUT&quot;],&quot;parameters&quot;:[&quot;id&quot;]},&quot;admin.users.delete&quot;:{&quot;uri&quot;:&quot;admin\/users\/{id}\/delete&quot;,&quot;methods&quot;:[&quot;DELETE&quot;],&quot;parameters&quot;:[&quot;id&quot;]},&quot;storage.local&quot;:{&quot;uri&quot;:&quot;storage\/{path}&quot;,&quot;methods&quot;:[&quot;GET&quot;,&quot;HEAD&quot;],&quot;wheres&quot;:{&quot;path&quot;:&quot;.*&quot;},&quot;parameters&quot;:[&quot;path&quot;]}},&quot;location&quot;:&quot;http:\/\/localhost\/reset-password\/architecto&quot;},&quot;flash&quot;:{&quot;type&quot;:null,&quot;message&quot;:null},&quot;email&quot;:null,&quot;token&quot;:&quot;architecto&quot;},&quot;url&quot;:&quot;\/reset-password\/architecto&quot;,&quot;version&quot;:&quot;5e7448cf8010c92df97ff203a50152f0&quot;,&quot;clearHistory&quot;:false,&quot;encryptHistory&quot;:false}"></div>    </body>
          </html>
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          link: '<http://localhost/build/assets/app-CshSF23B.css>; rel="preload"; as="style", <http://localhost/build/assets/app-CI6-uSIW.js>; rel="modulepreload"'
          vary: X-Inertia
          set-cookie: 'XSRF-TOKEN=eyJpdiI6InVUbjZSeFh6WTVxMkE3dEYzcXRrYnc9PSIsInZhbHVlIjoianpyMGpZcklFVDN3dGtKREJzbWVZSjZBRnJST3JGQ3RTdyt1UHpkWHpac0lyMDRRSTZWTTBjaWpSZVprRDJ0SjZwWHZKWjJjRHViaVViTjllMWdpYmtFejB6aENneWxIOFZBWFp5S1hEeWpPb3E3WnFnUTYwc1JubVRoVkErdGkiLCJtYWMiOiJjNzU4Y2UzZTgyNGM2MzM3MTliYjU5OTYxMzhmZjVkM2FiYWJlMDkzMWZjZTQ3MDg1OGY4MTc2NTM1MzVlM2QzIiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; samesite=lax; usermanager_session=eyJpdiI6IlVRN0UzN3kySEVaQXlFNUdVa0hZbkE9PSIsInZhbHVlIjoienFxUytKc3p5MkM3bzJ0VjhpN08xY3Z4QzVIQk94c1crVEtFMHhoY3NBQi8yaldFVlhpTGEyNG5FbDFYR01BTTVBS096TUs2djU4WTZHYmUzYzR6cHdGOXpKbEREYm1TclRSTHNUcFkwb1d5RVNvZTZiT2NPci9wUzJTZkZEQ2IiLCJtYWMiOiIzNWEwYjk0NWMzNmNlY2NkMWMxNzI4N2MwZTdkOGNlZWNhYzQ5NTZjNGUxMDRhYzk1NjRlOTQ4ZjRhYzliNmM4IiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: reset-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming new password request.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      token: architecto
      email: zbailey@example.net
      password: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: verify-email
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the email verification prompt.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          set-cookie: 'XSRF-TOKEN=eyJpdiI6IkRxMkplUG5rLzlmUkJETldRbDd3V1E9PSIsInZhbHVlIjoiVHoxQk5VSFF0di9vQUVlRkR6UlU5TnVnOHVWYW9uS2MrbC84OURYVmFYeWVSNk96MHFib1lORHRGZ3dOdjQ4UFlUQUpxZ3dac3JnOVVzTDJlc3pXV01BcVphSk53VTlYbG5tS3ZDZ01idjlFZVo1TEp1YWFrdFdSc1M2a0VSMHgiLCJtYWMiOiJkMmMzMjFjOTljM2ZlYmM3NTQ4OTA0NWIzYzE2MWQ4M2VmNmJjOTc1NTgwYWRmMjI0NTk5NWYzNzY2YWMzMzdlIiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; samesite=lax; usermanager_session=eyJpdiI6ImQ4SjdPamNBazlDMitid3dEQkFQQ3c9PSIsInZhbHVlIjoiRkFPYzJINmVROHVtOUFVQjFGaDl5V29EU2xzbmZWY0dOUjRlVyt3bGtpcmlnOGNRV0VXOWdlSUM3MlNyMGlEQUQ1MkFSVUJVSU5MMmloOUtiNDhYSDdHbnRxT3AwR2hMM0pHN0g5bVZOWE9ZL0trby9sSVJFMDZ4eXBaN05DZlkiLCJtYWMiOiIwN2EwOGFlZWJjNjk1MDg5N2U5YzZhZDFlMzUxMWIzYTA3ZjcwZjJiNWY4OTllZTE5ODMyNzE4MGUxZTQyZTVjIiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'verify-email/{id}/{hash}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Mark the authenticated user's email address as verified."
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the verify email.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      hash:
        name: hash
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      hash: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          set-cookie: 'XSRF-TOKEN=eyJpdiI6IlFWYk0yQVEwdHZCSm5BcnViU04vdEE9PSIsInZhbHVlIjoiazlpZDRVcm5BekEwM2FRSE03UitTalVWL0lPYzBKdWRoZTczVlIzb0dpRzNhbXFiQVdFOUJXNDBMdldhVnZRYmxCbDFCMXpEc1FEcFVxTGUvMGdJSWFUTGhLbHFqZWRTRnpVTWx3WkFVTUtucFVwTlBpV2VDREF0ZHNlQ2toM0wiLCJtYWMiOiIzMTZhYTQ2N2M4ZjIzOGYwYjM4OTlhOGI3MDJlZTk2OGY1ZTE5MzVjYjliYjc1Y2JlOWZjYTI5MDA1ZjllNzRlIiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; samesite=lax; usermanager_session=eyJpdiI6IlgrMXA3aGJ2SDdBN2lVcVptYVV1NlE9PSIsInZhbHVlIjoiWE5yMUgrbGJEVU5kOEk2NjN5cDd6OHgrYythMlM5Um8zRTcwc1c5eEZURStIWHpKdzZqUXVxQjEvakZzVkxiSFhteWZZQUJVeUNRNDVKcW5OVVMwbm9MSm9wdnRTL1JTczRaOEpEcnAvRmF3a2FMV01xM0NESGtjUTBOZkxrSE4iLCJtYWMiOiJiMTNmYTAwM2ExYWRjNWM0MThlYTNkYzdiYzk5MDRkMDgzZjI4MGQ2MjFiM2ZmMjEyZjZhNWIzMzIxZmRlYTFkIiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: email/verification-notification
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send a new email verification notification.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: confirm-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the confirm password view.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          set-cookie: 'XSRF-TOKEN=eyJpdiI6ImZpVnExaVpiOFVSRFJZZ0lwUmdKMFE9PSIsInZhbHVlIjoiYm4ybzEwd1pibk0zc2MvcnlnVEQwbStQOXdSR0VWZVBGbnFXWWNMdUhDMWRuR2FWTHo0a09wZmxZcmhNcVpjN3dENG05VFo0OXJxUTVjVFZKZEI5cmFsYnM4VGQzN3BCaGY1Q1AzaERHWXlzNmQvOWgxZ29EZ3ZDbHNmTVhyL28iLCJtYWMiOiJiNGE4YmM4ZTExYWJlMGExNGM3ODVlMGU5MTUxZWVlNDJjMTU4ODI1YmMzZDgxMzRkMmRiMDMxNGVmNTRlMDEyIiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; samesite=lax; usermanager_session=eyJpdiI6Im5KUW1hNUpDcFd6N05MZDFZM2hId2c9PSIsInZhbHVlIjoidDlYalpqdnRsNVJtUjd1cUVOVFdwdjcrTGJ0SlJQMW9nWERhWU9Vdjd0cXgvcHYrZlpJeGVaMkg0aEJ3ZURpaUlUakdaMFA4clIzcEtiYnRMc1VHNWg1bUJENHJ6TC9sOC9Qc3VZN3FsdzNQUzJ4U0FlNXZpVDVVdThGNU00VUkiLCJtYWMiOiJiNTM3MjY2MGYzNjQ1MWY5MGNmNGZhNzUxY2YzNDk2OWQxMTQ5YWRkZDdiODBkYzM1NWY2NTZhY2M3Yzc2MjhjIiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: confirm-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Confirm the user's password."
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update the user's password."
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      current_password:
        name: current_password
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      current_password: architecto
      password: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Destroy an authenticated session.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: admin
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          set-cookie: 'XSRF-TOKEN=eyJpdiI6Im5PdmJ2RHZ6ZzV4c1g1eVdSZnJXTVE9PSIsInZhbHVlIjoiU0JLWVM5TGl1ZjVSYUJHNEtoejJjZjNGcnJCSWJSeGJ1V2JINUJPR3EraUovRUd4cUtlZ2dHempFcVVVWXNxZWNFM0UxY0FWZk9pSVNJb0xBNTFudElpSjFJemNzL3p1NkMvZUFMZGNYNWgxZ0N1OHFxL1V6ZGJ5bFlqSThOemciLCJtYWMiOiIzOTZhMTZiNmQ0MWEwNmFhOGI3ZWQzMWM4YWJmZThjODdiY2RhOTdkOWQzM2FlNDg0OTEzNzhiOGE3NWM5YzE1IiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; samesite=lax; usermanager_session=eyJpdiI6IjVBWThoTmV6SisrL0EvQzE4SGFxSkE9PSIsInZhbHVlIjoiUy9DK0VqbUV4YTBVaWs1Rld4V0NiZUVPVWxwSnc4VjlwaiswOGpieU5YK2YybmZxMW91bnBDdHRQc1U2OCtTamlpbWNnZVN0QkZSQmNqelVPSjRjZTZjK2NMZ3FsckFDcU5LQnZGSU9ndHNWdmplamJGR0ZJUXhRRDlqa3UyN0oiLCJtYWMiOiJmN2ViMTdjMWNlMWIxYTg2OGQzYzlhNGZkNzY5MjAxMjU3ZjZjZGE2NTQxYzI4ODI1ZThiMzU1MjJhMDQyN2RmIiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: admin/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the users.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          set-cookie: 'XSRF-TOKEN=eyJpdiI6InZwZnM5dWJhODBWTmlWNi9PWCtQVnc9PSIsInZhbHVlIjoiNkg4cUplRDFRak5JVVYxenc2blR4RktCVkN5TG5KWEpMM2VraU9ScHRXSEd3b3l5L2VSNjRyV2tuaXk0ZDlvcElSemQreXhJZXVyNWE0RFdMS1FIaWFJOUtoL0xFMGVqUTBnVmhaUnc3OHBPTXQ1NEIrbkJaRnZ4QUdWSXl1VEMiLCJtYWMiOiJkZjFkY2U3ZTM5ZjE0MzI4OTY2YTRkNTc0NWJlMjAwOTVmYTgyMzU2ZmU0YmFlYjgyOTJjZDZhYzgyODQyZDdmIiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; samesite=lax; usermanager_session=eyJpdiI6IjIvMjZvWUZqQTFhZjFXcEhVVFlvNnc9PSIsInZhbHVlIjoia0ZaaVk4WWNmVmVjUHNpdTJrSWpzM1Q4T3YvUzhjM0NaMlZoZzBTSkJBRDZQMFpJeWhtU05Ua0ljNWQ0U1RBQmVVejVEUXRKN2pwdFpsaXlneUx0bjJDMzF1OVM0OU5OTHN4Z0dBMFJzWkpjWFZRWGFlU0htbkhEVmxWWjY4MzEiLCJtYWMiOiIyYTkzZTIwOGU4ZTQyZTEyYTY2MzI1MjA3YjAzNWRhODc3MWQ0ZTZlZmEzMjU3Y2E2NTY3OWE3YjY1M2MxZjkwIiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'admin/users/{id}/edit'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the form for editing the specified user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          set-cookie: 'XSRF-TOKEN=eyJpdiI6InlYZUZQVnRtRDZFTjd4cFlNMUlMeFE9PSIsInZhbHVlIjoiZERPVTJPSGFtYXM1SytCQk1SSklmQk9Kcm9weDRhQ3RlWVkxMWFlREk5dElQWHE1NG80MXJSaC9qMUUvM1dGUnhrdkpaZ0hPdkJweEl0Q2F4L0VBWTNiRmg4anZ0S3I3Tkltc3FMZmFPSU9PVWg3ZW5tT2RiVzJ3YkRBOE5hUFIiLCJtYWMiOiJhMTUyMDhmYWI1Y2RkNzI5YWFjMDQ4OWZhMDI4NWM4MzQxNjcxNWQ1Y2EyYjI2NTQ0NTM2YjRhYTFjNTk5NTU4IiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; samesite=lax; usermanager_session=eyJpdiI6IjFieTh4K2RyelBVQytrb3RXQlk4ZHc9PSIsInZhbHVlIjoib2M1MXhCeHM2dmwzdTBaYUxXTVVNYm9sVjk0T0lVN3cwQXFEbkhja2UyUUF5VU5SYmljR3plYWtkakcveDVGOHVUOGVwa1FGUHhxQVBIMHIrR05GNlFDaUp0cGIwWWZQcFFZU2F2WU5xcndJdlVkTnRBeWVXbUhFMC9rbytVTC8iLCJtYWMiOiI2OWJmM2M0ODdkZDUxYzY0YTJhNTM2YjVmMDA5YWZmYmRlMDhlZTZmM2M2M2E0ZTIyYTNkMTM5MWZkM2ZhZjc0IiwidGFnIjoiIn0%3D; expires=Mon, 26 May 2025 21:52:04 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'admin/users/{id}/update'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified user in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      surname:
        name: surname
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: ashly64@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      roles:
        name: roles
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: b
      surname: 'n'
      email: ashly64@example.com
      roles:
        - architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'admin/users/{id}/delete'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified user from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'storage/{path}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      path:
        name: path
        description: ''
        required: true
        example: '|{+-0p'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      path: '|{+-0p'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 403
        content: |-
          {
              "message": ""
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
